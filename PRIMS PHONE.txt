#include<iostream>
using namespace std;

class tree {
    int a[20][20], l, u, w, i, j, v, e, visited[20];
public:
    void input();
    void display();
    void minimum();
};

void tree::input() {
    cout << "Enter the number of branches (vertices): ";
    cin >> v;

    // Initialize visited and adjacency matrix
    for (i = 0; i < v; i++) {
        visited[i] = 0;
        for (j = 0; j < v; j++) {
            a[i][j] = 0;
        }
    }

    cout << "Enter the number of connections (edges): ";
    cin >> e;

    for (i = 0; i < e; i++) {
        cout << "\nEnter the end branches of connection (l u): ";
        cin >> l >> u;
        cout << "Enter the phone company charges for this connection: ";
        cin >> w;
        a[l - 1][u - 1] = a[u - 1][l - 1] = w;
    }
}

void tree::display() {
    cout << "\nAdjacency Matrix:\n";
    for (i = 0; i < v; i++) {
        for (j = 0; j < v; j++) {
            cout << a[i][j] << "\t";
        }
        cout << endl;
    }
}

void tree::minimum() {
    int p = 0, q = 0, total = 0, min;
    visited[0] = 1;

    cout << "\nMinimum cost connections using Prim's Algorithm:\n";
    for (int count = 0; count < v - 1; count++) {
        min = 999;

        for (i = 0; i < v; i++) {
            if (visited[i] == 1) {
                for (j = 0; j < v; j++) {
                    if (visited[j] != 1 && a[i][j] != 0) {
                        if (min > a[i][j]) {
                            min = a[i][j];
                            p = i;
                            q = j;
                        }
                    }
                }
            }
        }

        visited[q] = 1;
        cout << "Minimum cost connection is " << (p + 1) << " -> " << (q + 1)
             << " with charge: " << min << endl;
        total += min;
    }

    cout << "The minimum total cost of connections of all branches is: " << total << endl;
}

int main() {
    int ch;
    tree t;
    do {
        cout << "\n========== PRIM'S ALGORITHM MENU ==========" << endl;
        cout << "1. INPUT\n2. DISPLAY\n3. MINIMUM\n4. EXIT" << endl;
        cout << "Enter your choice: ";
        cin >> ch;

        switch (ch) {
            case 1:
                t.input();
                break;
            case 2:
                t.display();
                break;
            case 3:
                t.minimum();
                break;
            case 4:
                cout << "Exiting..." << endl;
                break;
            default:
                cout << "Invalid choice. Try again." << endl;
        }
    } while (ch != 4);

    return 0;
}
